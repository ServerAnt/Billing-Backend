# Generated by Django 4.2.10 on 2024-03-13 07:19
import logging

from django.conf import settings as django_settings
from django.db import migrations

from waldur_mastermind.marketplace_slurm import registrators as slurm_registrators

logger = logging.getLogger(__name__)


class LimitPeriods:
    MONTH = "month"
    ANNUAL = "annual"
    TOTAL = "total"

    CHOICES = (
        (
            MONTH,
            "Maximum monthly - every month service provider "
            "can report up to the amount requested by user.",
        ),
        (
            ANNUAL,
            "Maximum annually - every year service provider "
            "can report up to the amount requested by user.",
        ),
        (
            TOTAL,
            "Maximum total - SP can report up to the requested "
            "amount over the whole active state of resource.",
        ),
    )


def fix_limits_of_slurm_offering_components(apps, schema_editor):
    Offering = apps.get_model("marketplace", "Offering")
    OfferingComponent = apps.get_model("marketplace", "OfferingComponent")
    TOTAL = LimitPeriods.TOTAL
    default_limits = django_settings.WALDUR_SLURM["DEFAULT_LIMITS"]
    offering_ids = Offering.objects.filter(
        type="SlurmInvoices.SlurmPackage"
    ).values_list("id", flat=True)
    components = OfferingComponent.objects.filter(offering_id__in=offering_ids)
    for component in components:
        if component.type == "cpu":
            old_limit_amount = component.limit_amount
            old_limit_period = component.limit_period
            component.limit_amount = (
                slurm_registrators.SlurmRegistrator.convert_quantity(
                    default_limits["CPU"], "cpu"
                )
            )
            component.limit_period = TOTAL
            component.save(update_fields=["limit_amount", "limit_period"])
            logger.info(
                f"Updated limit for cpu component old values: {old_limit_amount} {old_limit_period} new values: {component.limit_amount} {component.limit_period} for offering - {component.offering.name}."
            )

        elif component.type == "gpu":
            old_limit_amount = component.limit_amount
            old_limit_period = component.limit_period
            component.limit_amount = (
                slurm_registrators.SlurmRegistrator.convert_quantity(
                    default_limits["GPU"], "gpu"
                )
            )
            component.limit_period = TOTAL
            component.save(update_fields=["limit_amount", "limit_period"])
            logger.info(
                f"Updated limit for gpu component old values: {old_limit_amount} {old_limit_period} new values: {component.limit_amount} {component.limit_period} for offering - {component.offering.name}."
            )

        elif component.type == "ram":
            old_limit_amount = component.limit_amount
            old_limit_period = component.limit_period
            component.limit_amount = (
                slurm_registrators.SlurmRegistrator.convert_quantity(
                    default_limits["RAM"], "ram"
                )
            )
            component.limit_period = TOTAL
            component.save(update_fields=["limit_amount", "limit_period"])
            logger.info(
                f"Updated limit for ram component old values: {old_limit_amount} {old_limit_period} new values: {component.limit_amount} {component.limit_period} for offering - {component.offering.name}."
            )


class Migration(migrations.Migration):
    dependencies = [
        ("marketplace", "0129_rename_divisions_to_organization_groups"),
    ]

    operations = [
        migrations.RunPython(fix_limits_of_slurm_offering_components),
    ]
