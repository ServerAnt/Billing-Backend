# Generated by Django 3.2.16 on 2023-01-05 00:15

import django.db.models.deletion
import django.utils.timezone
import django_fsm
import model_utils.fields
from django.conf import settings
from django.db import migrations, models

import waldur_core.core.fields
import waldur_core.core.models
import waldur_core.core.validators
import waldur_core.logging.loggers
import waldur_core.structure.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("structure", "0001_squashed_0036"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProjectTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=2000, verbose_name="description"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150,
                        validators=[waldur_core.core.validators.validate_name],
                        verbose_name="name",
                    ),
                ),
                (
                    "icon_url",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="icon url"
                    ),
                ),
                ("uuid", waldur_core.core.fields.UUIDField()),
                ("backend_id", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(waldur_core.core.models.BackendModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=2000, verbose_name="description"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150,
                        validators=[waldur_core.core.validators.validate_name],
                        verbose_name="name",
                    ),
                ),
                ("uuid", waldur_core.core.fields.UUIDField()),
                ("error_message", models.TextField(blank=True)),
                (
                    "state",
                    django_fsm.FSMIntegerField(
                        choices=[
                            (5, "Creation Scheduled"),
                            (6, "Creating"),
                            (1, "Update Scheduled"),
                            (2, "Updating"),
                            (7, "Deletion Scheduled"),
                            (8, "Deleting"),
                            (3, "OK"),
                            (4, "Erred"),
                        ],
                        default=5,
                    ),
                ),
                ("backend_id", models.CharField(blank=True, max_length=255)),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="waldur_jira.projecttemplate",
                    ),
                ),
                ("action", models.CharField(blank=True, max_length=50)),
                ("action_details", waldur_core.core.fields.JSONField(default=dict)),
                (
                    "runtime_state",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="runtime state"
                    ),
                ),
                ("error_traceback", models.TextField(blank=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="structure.project",
                    ),
                ),
                (
                    "service_settings",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="structure.servicesettings",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "ordering": ["-created"],
            },
            bases=(
                waldur_core.core.models.DescendantMixin,
                waldur_core.core.models.BackendModelMixin,
                waldur_core.logging.loggers.LoggableMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="IssueType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=2000, verbose_name="description"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150,
                        validators=[waldur_core.core.validators.validate_name],
                        verbose_name="name",
                    ),
                ),
                (
                    "icon_url",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="icon url"
                    ),
                ),
                ("uuid", waldur_core.core.fields.UUIDField()),
                ("backend_id", models.CharField(db_index=True, max_length=255)),
                (
                    "projects",
                    models.ManyToManyField(
                        related_name="issue_types", to="waldur_jira.Project"
                    ),
                ),
                (
                    "settings",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="structure.servicesettings",
                    ),
                ),
                ("subtask", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
                "verbose_name": "Issue type",
                "verbose_name_plural": "Issue types",
                "unique_together": {("settings", "backend_id")},
            },
            bases=(waldur_core.core.models.BackendModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Priority",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=2000, verbose_name="description"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150,
                        validators=[waldur_core.core.validators.validate_name],
                        verbose_name="name",
                    ),
                ),
                (
                    "icon_url",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="icon url"
                    ),
                ),
                ("uuid", waldur_core.core.fields.UUIDField()),
                ("backend_id", models.CharField(db_index=True, max_length=255)),
                (
                    "settings",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="structure.servicesettings",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "verbose_name": "Priority",
                "verbose_name_plural": "Priorities",
                "unique_together": {("settings", "backend_id")},
            },
            bases=(waldur_core.core.models.BackendModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("uuid", waldur_core.core.fields.UUIDField()),
                ("error_message", models.TextField(blank=True)),
                (
                    "state",
                    django_fsm.FSMIntegerField(
                        choices=[
                            (5, "Creation Scheduled"),
                            (6, "Creating"),
                            (1, "Update Scheduled"),
                            (2, "Updating"),
                            (7, "Deletion Scheduled"),
                            (8, "Deleting"),
                            (3, "OK"),
                            (4, "Erred"),
                        ],
                        default=5,
                    ),
                ),
                ("backend_id", models.CharField(max_length=255, null=True)),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="waldur_jira.issuetype",
                    ),
                ),
                ("summary", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("resolution", models.CharField(blank=True, max_length=255)),
                (
                    "priority",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="waldur_jira.priority",
                    ),
                ),
                ("status", models.CharField(max_length=255)),
                ("updated", models.DateTimeField(auto_now_add=True)),
                ("creator_username", models.CharField(blank=True, max_length=255)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="waldur_jira.project",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resource_content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jira_issues",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "resource_object_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="waldur_jira.issue",
                    ),
                ),
                ("resolution_sla", models.IntegerField(blank=True, null=True)),
                ("creator_name", models.CharField(blank=True, max_length=255)),
                (
                    "resolution_date",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("assignee_email", models.CharField(blank=True, max_length=255)),
                ("assignee_name", models.CharField(blank=True, max_length=255)),
                ("assignee_username", models.CharField(blank=True, max_length=255)),
                ("creator_email", models.CharField(blank=True, max_length=255)),
                ("reporter_email", models.CharField(blank=True, max_length=255)),
                ("reporter_name", models.CharField(blank=True, max_length=255)),
                ("reporter_username", models.CharField(blank=True, max_length=255)),
                ("error_traceback", models.TextField(blank=True)),
            ],
            options={
                "abstract": False,
                "ordering": ["-created"],
                "unique_together": {("project", "backend_id")},
            },
            bases=(waldur_core.structure.models.StructureLoggableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("uuid", waldur_core.core.fields.UUIDField()),
                ("error_message", models.TextField(blank=True)),
                (
                    "state",
                    django_fsm.FSMIntegerField(
                        choices=[
                            (5, "Creation Scheduled"),
                            (6, "Creating"),
                            (1, "Update Scheduled"),
                            (2, "Updating"),
                            (7, "Deletion Scheduled"),
                            (8, "Deleting"),
                            (3, "OK"),
                            (4, "Erred"),
                        ],
                        default=5,
                    ),
                ),
                ("backend_id", models.CharField(max_length=255, null=True)),
                ("file", models.FileField(upload_to="jira_attachments")),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="waldur_jira.issue",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "thumbnail",
                    models.FileField(
                        blank=True, null=True, upload_to="jira_attachments_thumbnails"
                    ),
                ),
                ("error_traceback", models.TextField(blank=True)),
            ],
            options={
                "abstract": False,
                "unique_together": {("issue", "backend_id")},
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("uuid", waldur_core.core.fields.UUIDField()),
                ("error_message", models.TextField(blank=True)),
                (
                    "state",
                    django_fsm.FSMIntegerField(
                        choices=[
                            (5, "Creation Scheduled"),
                            (6, "Creating"),
                            (1, "Update Scheduled"),
                            (2, "Updating"),
                            (7, "Deletion Scheduled"),
                            (8, "Deleting"),
                            (3, "OK"),
                            (4, "Erred"),
                        ],
                        default=5,
                    ),
                ),
                ("backend_id", models.CharField(max_length=255, null=True)),
                ("message", models.TextField(blank=True)),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="waldur_jira.issue",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("error_traceback", models.TextField(blank=True)),
            ],
            options={
                "abstract": False,
                "unique_together": {("issue", "backend_id")},
            },
            bases=(waldur_core.structure.models.StructureLoggableMixin, models.Model),
        ),
    ]
